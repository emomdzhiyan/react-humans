{"version":3,"sources":["store/constants/index.js","store/reducers/humans.js","store/reducers/index.js","store/index.js","components/Header/index.js","store/actions/index.js","components/HumansList/index.js","components/Human/index.js","Main/index.js","index.js"],"names":["ADD_HUMAN","DELETE_HUMAN","EDIT_HUMAN","GET_HUMAN","SET_NEW_HUMAN","initialState","humans","id","name","notes","selected","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","payload","filteredHumans","filter","human","editedHumans","changedHuman","find","selectedHuman","allReducers","combineReducers","humansReducer","persistConfig","key","storage","enhancer","composeWithDevTools","persistedReducer","persistReducer","rootReducer","Header","memo","react_default","a","createElement","className","href","addHuman","createAction","deleteHuman","editHuman","getHuman","setNewHuman","HumansList","_ref2","chooseHuman","cancelSelection","_useState","useState","_useState2","slicedToArray","searchValue","setSearchValue","_useState3","_useState4","renderedArr","setArr","useEffect","placeholder","value","onChange","e","target","filteredArr","_ref","toLowerCase","includes","getFilteredHumans","aria-label","onClick","aria-hidden","map","cn","bg-white","onKeyPress","humanId","role","tabIndex","mapDispatchToProps","connect","Human","propsName","propsNotes","addNewHuman","deleteData","editData","setName","setNotes","_useState5","_useState6","nameError","setNameError","is-invalid","text","trim","rows","newUid","uid","humanName","humanNotes","Main","react","components_Header","components_HumansList","components_Human","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","integration_react","loading","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.7ae036b9.chunk.js","sourcesContent":["export const ADD_HUMAN = 'ADD_HUMAN';\nexport const DELETE_HUMAN = 'DELETE_HUMAN';\nexport const EDIT_HUMAN = 'EDIT_HUMAN';\nexport const GET_HUMAN = 'GET_HUMAN';\nexport const SET_NEW_HUMAN = 'SET_NEW_HUMAN';\n","import {\n  ADD_HUMAN,\n  DELETE_HUMAN,\n  EDIT_HUMAN,\n  GET_HUMAN,\n  SET_NEW_HUMAN,\n} from '../constants';\n\nconst initialState = {\n  humans: [],\n  id: '',\n  name: '',\n  notes: '',\n  selected: false,\n};\n\nfunction humans(state = initialState, action) {\n  switch (action.type) {\n    case ADD_HUMAN: {\n      return {\n        ...state,\n        humans: [...state.humans, action.payload],\n        id: '',\n        name: '',\n        notes: '',\n        selected: false,\n      };\n    }\n    case DELETE_HUMAN: {\n      const filteredHumans = state.humans.filter(human => human.id !== action.payload);\n      return {\n        ...state,\n        humans: filteredHumans,\n        id: '',\n        name: '',\n        notes: '',\n        selected: false,\n      };\n    }\n    case EDIT_HUMAN: {\n      const editedHumans = [...state.humans];\n      const changedHuman = editedHumans.find(human => human.id === action.payload.id);\n      changedHuman.name = action.payload.name;\n      changedHuman.notes = action.payload.notes;\n      return {\n        ...state,\n        humans: editedHumans,\n        id: '',\n        name: '',\n        notes: '',\n        selected: false,\n      };\n    }\n    case GET_HUMAN: {\n      const selectedHuman = state.humans.find(human => human.id === action.payload);\n      return {\n        ...state,\n        name: selectedHuman.name,\n        notes: selectedHuman.notes,\n        id: action.payload,\n        selected: true,\n      };\n    }\n    case SET_NEW_HUMAN: {\n      return {\n        ...state,\n        name: '',\n        notes: '',\n        id: '',\n        selected: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default humans;\n","import { combineReducers } from 'redux';\n\nimport humansReducer from './humans';\n\nconst allReducers = combineReducers({\n  humansReducer,\n});\n\nexport default allReducers;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // eslint-disable-line\nimport storage from 'redux-persist/lib/storage';\n\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst enhancer = composeWithDevTools();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  const store = createStore(persistedReducer, enhancer);\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React, { memo } from 'react';\n\nimport './style.scss';\n\nconst Header = memo(() => (\n  <div className=\"container-fluid bg-secondary\">\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand text-white\">Humans-test</a>\n      </div>\n    </nav>\n  </div>\n));\n\nexport default Header;\n","import { createAction } from 'redux-actions';\n\nimport {\n  ADD_HUMAN,\n  DELETE_HUMAN,\n  EDIT_HUMAN,\n  GET_HUMAN,\n  SET_NEW_HUMAN,\n} from '../constants';\n\nexport const addHuman = createAction(ADD_HUMAN);\nexport const deleteHuman = createAction(DELETE_HUMAN);\nexport const editHuman = createAction(EDIT_HUMAN);\nexport const getHuman = createAction(GET_HUMAN);\nexport const setNewHuman = createAction(SET_NEW_HUMAN);\n","import React, { memo, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport cn from 'classnames';\n\nimport './style.scss';\nimport { getHuman, setNewHuman } from '../../store/actions';\n\nfunction getFilteredHumans(humans, value) {\n  const filteredArr = humans.filter(({ name, notes }) => (\n    name.toLowerCase().includes(value.toLowerCase()) || notes.toLowerCase().includes(value.toLowerCase())));\n  return filteredArr;\n}\n\nconst HumansList = memo((\n  {\n    humans,\n    id,\n    getHuman: chooseHuman,\n    setNewHuman: cancelSelection,\n  },\n) => {\n  const [searchValue, setSearchValue] = useState('');\n  const [renderedArr, setArr] = useState(humans);\n  const onHumanClick = (humanId) => {\n    chooseHuman(humanId);\n  };\n  const onNewHumanClick = () => {\n    cancelSelection();\n  };\n  const onSearch = (e) => {\n    const { value } = e.target;\n    if (value) {\n      const filteredArr = getFilteredHumans(humans, value);\n      setSearchValue(value);\n      setArr(filteredArr);\n    } else {\n      setSearchValue(value);\n      setArr(humans);\n    }\n  };\n  const clearSearch = () => {\n    setSearchValue('');\n    setArr(humans);\n  };\n  useEffect(() => {\n    setArr(humans);\n  }, [humans]);\n  return (\n    <div className=\"d-block col-3\">\n      <div className=\"humans-list-column\">\n        <div className=\"input-group p-3\">\n          <form>\n            <input placeholder=\"Search\" type=\"text\" className=\"form-control\" value={searchValue} onChange={onSearch} />\n            <button type=\"button\" className=\"close close-button\" aria-label=\"Close\" onClick={clearSearch}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </form>\n        </div>\n        <div className=\"px-3\">\n          <button\n            type=\"button\"\n            className=\"btn btn-sm btn-info btn-block mt-3\"\n            onClick={onNewHumanClick}\n          >\n            New Human\n          </button>\n        </div>\n        <ul className=\"humans-list list-group \">\n          {renderedArr.length\n            ? renderedArr.map(human => (\n              <li\n                key={human.id}\n                className={cn('list-element list-group-item-action', {\n                  'bg-white': human.id === id,\n                })}\n              >\n                <div\n                  onKeyPress={() => {}}\n                  onClick={() => onHumanClick(human.id)}\n                  role=\"button\"\n                  tabIndex={-1}\n                >\n                  <span>{human.name}</span>\n                </div>\n              </li>\n            ))\n            : <li className=\"list-element\">No humans</li>\n          }\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nHumansList.propTypes = {\n  humans: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getHuman: PropTypes.func.isRequired,\n  setNewHuman: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  humans: state.humansReducer.humans,\n  id: state.humansReducer.id,\n});\n\nconst mapDispatchToProps = {\n  getHuman,\n  setNewHuman,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HumansList);\n","import React, { memo, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uid from 'uuid';\nimport cn from 'classnames';\n\nimport { addHuman, deleteHuman, editHuman } from '../../store/actions';\n\nconst Human = memo((\n  {\n    id,\n    name: propsName,\n    notes: propsNotes,\n    selected,\n    addHuman: addNewHuman,\n    deleteHuman: deleteData,\n    editHuman: editData,\n  },\n) => {\n  const [name, setName] = useState('');\n  const [notes, setNotes] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const handleName = (e) => {\n    const trimedText = e.target.value.trim();\n    const text = trimedText && e.target.value;\n    setName(text);\n    setNameError(false);\n  };\n  const handleNotes = ({ target: { value } }) => {\n    setNotes(value);\n  };\n  const onSaveClick = () => {\n    const newUid = uid();\n    if (name) {\n      const humanName = name.trim();\n      const humanNotes = notes.trim();\n      addNewHuman({ name: humanName, notes: humanNotes, id: newUid });\n      setName('');\n      setNotes('');\n    } else {\n      setNameError(true);\n    }\n  };\n  const onDelete = () => {\n    deleteData(id);\n    setName('');\n    setNotes('');\n  };\n  const onEdit = () => {\n    if (name) {\n      const payload = {\n        name,\n        notes,\n        id,\n      };\n      editData(payload);\n      setName('');\n      setNotes('');\n    } else {\n      setNameError(true);\n    }\n  };\n  useEffect(() => {\n    if (selected) {\n      setName(propsName);\n      setNotes(propsNotes);\n      setNameError(false);\n    } else {\n      setName('');\n      setNotes('');\n      setNameError(false);\n    }\n  }, [id]);\n  return (\n    <div className=\"col-6\">\n      <form className=\"mt-3\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            className={cn('form-control', {\n              'is-invalid': nameError,\n            })}\n            value={name}\n            onChange={handleName}\n          />\n          <div className=\"invalid-feedback\">\n            Please type a name.\n          </div>\n          <textarea\n            placeholder=\"Notes\"\n            rows=\"12\"\n            className=\"form-control mt-3\"\n            value={notes}\n            onChange={handleNotes}\n          />\n        </div>\n        {selected\n          ? (\n            <div className=\"d-flex justify-content-between\">\n              <button type=\"button\" className=\"btn btn-danger\" onClick={onDelete}>Delete</button>\n              <button type=\"button\" className=\"btn btn-warning\" onClick={onEdit}>Edit</button>\n            </div>\n          )\n          : <button type=\"button\" className=\"btn btn-success\" onClick={onSaveClick}>Save</button>\n        }\n      </form>\n    </div>\n  );\n});\n\nHuman.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  notes: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  addHuman: PropTypes.func.isRequired,\n  deleteHuman: PropTypes.func.isRequired,\n  editHuman: PropTypes.func.isRequired,\n};\n\nconst MapStateToProps = state => ({\n  id: state.humansReducer.id,\n  name: state.humansReducer.name,\n  notes: state.humansReducer.notes,\n  selected: state.humansReducer.selected,\n});\n\nconst mapDispatchToProps = {\n  addHuman,\n  deleteHuman,\n  editHuman,\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps)(Human);\n","import React, { memo, Fragment } from 'react';\n\nimport Header from '../components/Header';\nimport HumansList from '../components/HumansList';\nimport Human from '../components/Human';\n\nconst Main = memo(() => (\n  <Fragment>\n    <Header />\n    <div className=\"container\">\n      <div className=\"row\">\n        <HumansList />\n        <Human />\n      </div>\n    </div>\n  </Fragment>\n));\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport configureStore from './store';\nimport './index.scss';\nimport Main from './Main';\n\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Main />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}